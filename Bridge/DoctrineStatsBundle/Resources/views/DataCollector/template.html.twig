{% extends 'WebProfilerBundle:Profiler:layout.html.twig' %}

{% block toolbar %}
    {% set icon %}
        {{ include('@Doctrine/Collector/icon.svg') }}

        {% set status = collector.getToolbarStatus() %}
            <span class="sf-toolbar-value">
                {{ collector.countManagedEntities() }} /
                {{ collector.countLazyLoadedEntities() }}
                {% if collector.isHydratorsOverloaded() %}
                    / {{ collector.getDoctrineTime() }} ms
                {% endif %}
            </span>
    {% endset %}

    {% set text %}
        <div class="sf-toolbar-info-piece">
            <b>Quer{% if collector.countQueries() > 1 %}ies{% else %}y{% endif %}</b>
            <span class="sf-toolbar-status{% if collector.countQueries() >= collector.getQueriesAlert() %} sf-toolbar-status-red{% endif %}">
                {{ collector.countQueries() }}
            </span>
        </div>
        <div class="sf-toolbar-info-piece">
            <b>Different quer{% if collector.countDifferentQueries() > 1 %}ies{% else %}y{% endif %}</b>
            <span class="sf-toolbar-status">
                {{ collector.countDifferentQueries() }}
            </span>
        </div>
        <div class="sf-toolbar-info-piece">
            <b>Managed entit{% if collector.countManagedEntities() > 1 %}ies{% else %}y{% endif %}</b>
            <span class="sf-toolbar-status{% if collector.countManagedEntities() >= collector.getManagedEntitiesAlert() %} sf-toolbar-status-red{% endif %}">
                {{ collector.countManagedEntities() }}
            </span>
        </div>
        <div class="sf-toolbar-info-piece">
            <b>Lazy loaded entities</b>
            <span class="sf-toolbar-status{% if collector.countLazyLoadedEntities() >= collector.getLazyLoadedEntitiesAlert() %} sf-toolbar-status-red{% endif %}">
                {{ collector.countLazyLoadedEntities() }}
            </span>
        </div>
        <div class="sf-toolbar-info-piece">
            <b>Queries time</b>
            <span class="sf-toolbar-status">
                {{ collector.getQueriesTime() }} ms
                ({{ collector.getQueriesTimePercent() }}%)
            </span>
        </div>
        {% if collector.isHydratorsOverloaded() %}
            <div class="sf-toolbar-info-piece">
                <b>Hydration time</b>
                <span class="sf-toolbar-status{% if collector.getHydrationTotalTime() >= collector.getHydrationTimeAlert() %} sf-toolbar-status-red{% endif %}">
                    {{ collector.getHydrationTotalTime() }} ms
                    ({{ collector.getHydrationTimePercent() }}%)
                </span>
            </div>

            <div class="sf-toolbar-info-piece">
                <b>Doctrine time</b>
                <span class="sf-toolbar-status">
                    {{ collector.getDoctrineTime() }} ms
                </span>
            </div>
        {% endif %}
    {% endset %}

    {{ include('@WebProfiler/Profiler/toolbar_item.html.twig', { link: true }) }}
{% endblock %}


{% block menu %}
    {# This left-hand menu appears when using the full-screen profiler. #}
    <span class="label{% if collector.countWarnings() > 0 %} label-status-error{% endif %}">
        <span class="icon">{{ include('@Doctrine/Collector/icon.svg') }}</span>
        <strong>Statistics</strong>
        {% if collector.isHydratorsOverloaded() %}
            <span class="count">
                <span>
                    {{ collector.getDoctrineTime() }} ms
                </span>
            </span>
        {% endif %}
    </span>
{% endblock %}

{% block head %}
    {{ parent() }}

    <style type="text/css">
        body {
            cursor: default;
        }

        .metric-yellow {
            background-color: #A46A1F;
            color: white;
        }

        .metric-yellow .label {
            background-color: #77470f;
            color: white;
        }

        .metric-red .label {
            background-color: #721313;
            color: white;
        }

        .metric-red {
            background-color: #a31f1f;
            color: white;
        }

        .badge {
            padding: 4px 6px;
            font-size: 12px;
            font-weight: bold;
            font-family: Helvetica, Arial, sans-serif;
        }

        pre.highlight {
            margin: 0;
            white-space: pre-wrap;
        }

        .alert-help {
            padding: 10px;
            margin-top: 15px;
            background-color: #3f83cc;
            color: white;
            font-weight: bold;
        }

        .alert-help a,
        .alert-help a:hover,
        .alert-help a:visited {
            color: white;
        }

        tr.hydrated-entities td {
            background-color: #ededed;
        }

        div.indented {
            margin-left: 20px;
        }
    </style>
{% endblock %}

{% block panel %}
    {% import _self as self %}

    <h2>Doctrine statistics</h2>
    <div class="metrics">
        <div class="metric{% if collector.countQueries() >= collector.getQueriesAlert() %} metric-red{% endif %}">
            <span class="value">{{ collector.countQueries() }}</span>
            <span class="label">Queries</span>
        </div>
        <div class="metric">
            <span class="value">{{ collector.countDifferentQueries() }}</span>
            <span class="label">Different quer{% if collector.countDifferentQueries() > 1 %}ies{% else %}y{% endif %}</span>
        </div>
        <div class="metric{% if collector.countManagedEntities() >= collector.getManagedEntitiesAlert() %} metric-red{% endif %}">
            <span class="value">{{ collector.countManagedEntities() }}</span>
            <span class="label">Managed entities</span>
        </div>
        <div class="metric{% if collector.countLazyLoadedEntities() >= collector.getLazyLoadedEntitiesAlert() %} metric-red{% endif %}">
            <span class="value">{{ collector.countLazyLoadedEntities() }}</span>
            <span class="label">Lazy loaded entities</span>
        </div>
        <div class="metric">
            <span class="value">{{ collector.getQueriesTime() }} <span class="text-small">ms</span></span>
            <span class="label">Queries ({{ collector.getQueriesTimePercent() }}%)</span>
        </div>
        {% if collector.isHydratorsOverloaded() %}
            <div class="metric{% if collector.getHydrationTotalTime() >= collector.getHydrationTimeAlert() %} metric-red{% endif %}">
                <span class="value">{{ collector.getHydrationTotalTime() }} <span class="text-small">ms</span></span>
                <span class="label">
                    Hydration ({{ collector.getHydrationTimePercent() }}%)
                </span>
            </div>

            <div class="metric">
                <span class="value">{{ collector.getDoctrineTime() }} <span class="text-small">ms</span></span>
                <span class="label">Doctrine</span>
            </div>
        {% endif %}
    </div>

    {% if collector.isHydratorsOverloaded() == false %}
        <div class="alert-help">
            You can show hydration time, by configuring
            <a href="https://github.com/steevanb/composer-overload-class" target="_blank">steevanb/composer-overload-class</a>
            (<a href="https://github.com/steevanb/doctrine-stats/blob/master/README.md" target="_blank">view how to configure it</a>).
        </div>
    {% endif %}
    {% if collector.showDoctrineHydrationHelp() %}
        <div class="alert-help">
            Doctrine hydration is extremely slow (25x to 100x slowest than SQL request), and most of the time,
            useless if you do not save hydrated entities.
            <br />
            Consider using another hydration method, like $query->getArrayResult() (8x faster than $query->getResult()), or
            <a href="https://github.com/steevanb/doctrine-read-only-hydrator" target="_blank">steevanb/doctrine-read-only-hydrator</a>
            to continue working with objects but almost 5x faster than Doctrine Hydration.
        </div>
    {% endif %}

    <h2>
        {{ collector.countQueries() }} quer{% if collector.countQueries() > 1 %}ies{% else %}y{% endif %}
        ({{ collector.countDifferentQueries() }} different{% if collector.countDifferentQueries() > 1 %}s{% endif %})
        ({{ collector.getQueriesTimePercent() }}%)
    </h2>
    <table>
        <thead>
            <tr>
                <th>Count</th>
                <th>Type</th>
                <th>Time</th>
                <th>Info</th>
            </tr>
        </thead>
        <tbody>
            {% for sql,queries in collector.getQueries() %}
                <tr>
                    <td>
                        <span class="badge{% if queries.data|length >= 10 %} metric-red{% elseif queries.data|length > 1 %} metric-yellow{% endif %}">
                            {{ queries.data|length }}
                        </span>
                    </td>
                    <td class="nowrap">{% spaceless %}
                        {% if queries.lazyLoadedEntities|length > 0 %}
                            <span class="badge metric-red">Lazy loading</span>
                        {% else %}
                            Manual
                        {% endif %}
                    {% endspaceless %}</td>
                    <td class="nowrap">{% spaceless %}
                        <img src="http://www.dustball.com/icons/icons/database.png" title="SQL time" /> {{ '%0.2f'|format(queries.queryTime) }}&nbsp;ms ({{ queries.queryTimePercent }}%)<br />
                        <img src="http://www.dustball.com/icons/icons/page_white_php.png" title="Hydration time" /> {{ '%0.2f'|format(queries.hydrationTime) }}&nbsp;ms ({{ queries.hydrationTimePercent }}%)<br />
                        <img src="http://www.dustball.com/icons/icons/time.png" title="Total time" /> {{ '%0.2f'|format(queries.queryTime + queries.hydrationTime) }}&nbsp;ms
                    {% endspaceless %}</td>
                    <td>
                        <div>{{ sql|doctrine_pretty_query(highlight_only = true) }}</div>

                        <div class="text-small font-normal">
                            <a
                                class="link-inverse sf-toggle"
                                data-toggle-selector="#query-parameters-{{ loop.index }}"
                                data-toggle-alt-content="Hide parameters"
                            >Show parameters</a>

                            {% set countLazyLoadedEntities = 0 %}
                            {% for lazyLoadedEntities in queries.lazyLoadedEntities %}
                                {% set countLazyLoadedEntities = countLazyLoadedEntities + lazyLoadedEntities|length %}
                            {% endfor %}

                            {% if countLazyLoadedEntities > 0 %}
                                &nbsp;&nbsp;&nbsp;&nbsp;
                                <a
                                    class="link-inverse sf-toggle"
                                    data-toggle-selector="#query-lazy-loaded-entities-{{ loop.index }}"
                                    data-toggle-alt-content="Hide entiti{% if countLazyLoadedEntities == 1 %}y{% else %}es{% endif %}"
                                >
                                    Show {{ countLazyLoadedEntities }} entiti{% if countLazyLoadedEntities == 1 %}y{% else %}es{% endif %}
                                </a>
                            {% endif %}

                            <div id="query-parameters-{{ loop.index }}">
                                {% for query in queries.data %}
                                    <span class="text-bold">#{{ loop.index }}</span>
                                    {{ query.params|yaml_encode }}
                                    <br />
                                {% endfor %}
                            </div>

                            {% if queries.lazyLoadedEntities|length > 0 %}
                                <div id="query-lazy-loaded-entities-{{ loop.index }}">
                                    {% for lazyLoadedeEntities in queries.lazyLoadedEntities %}
                                        <strong>#{{ loop.index }}</strong>
                                        <div class="indented">
                                            {% for lazyLoadedeEntity in lazyLoadedeEntities %}
                                                {{ self.className(lazyLoadedeEntity) }},
                                                {{ collector.identifiersAsString(lazyLoadedeEntity.identifiers) }}
                                                <br />
                                            {% endfor %}
                                        </div>
                                    {% endfor %}
                                </div>
                            {% endif %}
                        </div>
                    </td>
                </tr>
            {% endfor %}
        </tbody>
    </table>

    <h2>
        {{ collector.countManagedEntities() }}
        managed entit{% if collector.countManagedEntities() > 1 %}ies{% else %}y{% endif %}
    </h2>
    <table>
        <thead>
            <tr>
                <th>Count</th>
                <th>Entity</th>
                <th>Identifiers</th>
            </tr>
        </thead>
        <tbody>
            {% for className, identifiers in collector.getManagedEntities() %}
                <tr>
                    <td>{{ identifiers|length }}</td>
                    <td>
                        {{ self.className(collector.explodeClassParts(className)) }}

                        <div id="managed-entities-{{ loop.index }}">
                            {{ self.identifiers(collector, identifiers) }}
                        </div>
                    </td>
                    <td>
                        <a
                            class="link-inverse sf-toggle"
                            data-toggle-selector="#managed-entities-{{ loop.index }}"
                            data-toggle-alt-content="Hide identifier{% if identifiers|length > 1 %}s{% endif %}"
                        >
                            Show identifier{% if identifiers|length > 1 %}s{% endif %}
                        </a>
                    </td>
                </tr>
            {% endfor %}
        </tbody>
    </table>

    <h2>{{ collector.countLazyLoadedEntities() }} lazy loaded entit{% if collector.countLazyLoadedEntities() > 1 %}ies{% else %}y{% endif %}</h2>
    <table>
        <thead>
            <tr>
                <th>Classname</th>
                <th>Identifiers</th>
                <th>Same FQCN</th>
                <th>Associations</th>
            </tr>
        </thead>
        <tbody>
            {% for lazyLoadedEntity in collector.getLazyLoadedEntities() %}
                <tr>
                    <td>
                        <span class="text-muted">{{ lazyLoadedEntity.namespace }}\</span
                        ><span class="text-bold">{{ lazyLoadedEntity.className }}</span>
                    </td>
                    <td>
                        {% for name,value in lazyLoadedEntity.identifiers %}
                            {{ name }}: {{ value }}
                            {% if loop.last == false %}, {% endif %}
                        {% endfor %}
                    </td>
                    <td>
                        {{ collector.countLazyLoadedClass(lazyLoadedEntity.namespace ~ '\\' ~ lazyLoadedEntity.className) }}
                    </td>
                    <td>
                        <a
                            class="link-inverse sf-toggle"
                            data-toggle-selector="#lazy-loaded-entity-{{ loop.index }}"
                            data-toggle-alt-content="Hide association{% if lazyLoadedEntity.associations|length > 1 %}s{% endif %}"
                        >
                            Show {{ lazyLoadedEntity.associations|length }}
                            association{% if lazyLoadedEntity.associations|length > 1 %}s{% endif %}
                        </a>

                        <div id="lazy-loaded-entity-{{ loop.index }}">
                            {% for association in lazyLoadedEntity.associations %}
                                {{ self.className(association) }}<span class="text-muted">::${{ association.field }}</span>
                                <br />
                            {% endfor %}
                        </div>
                    </td>
                </tr>
            {% endfor %}
        </tbody>
    </table>

    {% if collector.isHydratorsOverloaded() %}
        <h2>
            {{ collector.getHydrationTotalTime() }} ms hydration time
            ({{ collector.getHydrationTimePercent() }}%)
        </h2>
        <table>
            <thead>
                <tr>
                    <th>Time</th>
                    <th>Hydrator</th>
                    <th>Entities</th>
                </tr>
            </thead>
            <tbody>
                {% for hydrator,time in collector.getHydrationTimesByHydrator() %}
                    {% set countHydratedEntities = collector.countHydratedEntities(hydrator) %}
                    <tr>
                        <td>{{ '%0.2f'|format(time) }} ms</td>
                        <td>
                            {{ self.className(collector.explodeClassParts(hydrator)) }}
                            {% if countHydratedEntities > 0 %}
                                <div id="hydrated-entities-{{ loop.index }}">
                                    {% for className,identifiers in collector.getHydratedEntities(hydrator) %}
                                        {{ self.className(collector.explodeClassParts(className)) }}[{{ identifiers|length }}]
                                        <br />
                                        {{ self.identifiers(collector, identifiers) }}
                                        <br />
                                    {% endfor %}
                                </div>
                            {% endif %}
                        </td>
                        <td>
                            {% if countHydratedEntities > 0 %}
                                <a
                                    class="link-inverse sf-toggle"
                                    data-toggle-selector="#hydrated-entities-{{ loop.index }}"
                                    data-toggle-alt-content="Hide hydrated entit{% if countHydratedEntities > 1 %}ies{% else %}y{% endif %}"
                                >
                                    Show {{ countHydratedEntities }}
                                    entit{% if countHydratedEntities > 1 %}ies{% else %}y{% endif %}
                                </a>
                            {% else %}
                                Unavailable
                            {% endif %}
                        </td>
                    </tr>
                {% endfor %}
            </tbody>
        </table>
    {% endif %}
{% endblock %}

{% macro className(classNameParts) %}
    {% spaceless %}
        <span class="text-muted">{{ classNameParts.namespace }}\</span>
        <span class="text-bold">{{ classNameParts.className }}</span>
    {% endspaceless %}
{% endmacro %}

{% macro identifiers(collector, identifiers) %}
    {% for identifier,count in collector.mergeIdentifiers(identifiers) %}
        {{ identifier }}
        {% if count > 1 %}
            ({{ count }}x)
        {% endif %}
        {% if loop.last == false %}
            <br />
        {% endif %}
    {% endfor %}
{% endmacro %}
